{"version":3,"file":"component---src-pages-search-tsx-98981508ac49f3bc5d65.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/hooks/usePosts.tsx","webpack://gatsby-starter-default/./src/components/Search/SearchList.tsx","webpack://gatsby-starter-default/./src/components/Search/Seach.tsx","webpack://gatsby-starter-default/./src/pages/search.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby'\nimport { PostQueryResult } from 'types/PostItem.types'\n\nconst usePosts = () => {\n  const data = useStaticQuery<PostQueryResult>(graphql`\n    query {\n      allMarkdownRemark {\n        nodes {\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            categories\n            summary\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  `)\n\n  return data.allMarkdownRemark.nodes.map(post => ({\n    title: post.frontmatter.title,\n    date: post.frontmatter.date,\n    slug: post.fields.slug,\n    excerpt: post.excerpt,\n    categories: post.frontmatter.categories,\n    thumbnail: post.frontmatter.thumbnail,\n    summary: post.frontmatter.summary,\n  }))\n}\n\nexport default usePosts\n","import styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { ThemeContext } from 'hooks/useTheme'\nimport { useContext } from 'react'\nimport { PostFrontmatterType } from 'types/PostItem.types'\n\ntype SearchPostProps = PostFrontmatterType & {\n  slug: string\n}\n\nconst SearchList: React.FC<{ posts: SearchPostProps[] }> = ({ posts }) => {\n  const { theme } = useContext(ThemeContext)\n  return (\n    <ListContainer>\n      {posts.map(post => (\n        <ListItem to={post.slug} theme={theme}>\n          <ItemWrapper>\n            <Title>{post.title}</Title>\n            <Summary>{post.summary}</Summary>\n            <Category>\n              {post.categories.map(category => (\n                <CategoryItem key={category} theme={theme}>\n                  {category}\n                </CategoryItem>\n              ))}\n            </Category>\n            <Date>{post.date}</Date>\n          </ItemWrapper>\n          <ThumbnailImageContainer>\n            {post.thumbnail?.childImageSharp?.gatsbyImageData && (\n              <ThumbnailImage\n                image={getImage(post.thumbnail.childImageSharp.gatsbyImageData)}\n                alt=\"Post Item Image\"\n              />\n            )}\n          </ThumbnailImageContainer>\n        </ListItem>\n      ))}\n    </ListContainer>\n  )\n}\n\nexport default SearchList\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: calc(100% - 200px);\n  margin: 30px 20px 30px 80px;\n  justify-content: space-between;\n  @media (max-width: 768px) {\n    width: calc(100% - 160px);\n    margin: 30px 20px 30px 60px;\n  }\n`\n\nconst ListItem = styled(Link)`\n  border-radius: 10px;\n  justify-content: space-between;\n  display: flex;\n  flex-direction: row;\n  padding: 20px;\n  margin-bottom: 10px;\n  width: 100%;\n  color: black;\n  flex-grow: 1;\n  position: relative;\n  box-shadow: ${props =>\n    props.theme === 'light'\n      ? '0 0 4px rgba(0, 0, 0, 0.15)'\n      : '0 0 4px rgba(255, 255, 255, 0.4)'};\n  transition: 0.3s box-shadow;\n  cursor: pointer;\n  text-decoration: none;\n  &:hover {\n    box-shadow: ${props =>\n      props.theme === 'light'\n        ? '0 0 3px rgba(0, 0, 0, 0.3)'\n        : '0 0 3px rgba(255, 255, 255, 0.3)'};\n    text-decoration: underline;\n  }\n  @media (max-width: 768px) {\n    margin-top: 10px;\n    margin-bottom: 10px;\n    height: 130px;\n  }\n`\nconst ItemWrapper = styled.div`\n  flex-direction: column;\n  width: 1200px;\n`\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 28px;\n  font-weight: 700;\n  @media (max-width: 768px) {\n    font-size: 20px;\n    font-weight: 700;\n  }\n`\nconst Category = styled.span`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 40px 0 0 -5px;\n  position: absolute;\n  bottom: 60px;\n  order: 1;\n  @media (max-width: 768px) {\n    top: 75px;\n  }\n`\nconst Date = styled.span`\n  font-size: 14px;\n  font-weight: 400;\n  opacity: 0.7;\n  position: absolute;\n  bottom: 30px;\n  order: 2;\n  @media (max-width: 768px) {\n    top: 150px;\n  }\n`\n\nconst CategoryItem = styled.div`\n  margin: 2.5px 5px;\n  padding: 3px 5px;\n  border-radius: 3px;\n  background: ${props => (props.theme === 'light' ? '#FFEA75' : 'black')};\n  font-size: 14px;\n  font-weight: 700;\n  color: ${props => (props.theme === 'light' ? '#7d64b1' : 'white')};\n`\n\nconst Summary = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-top: 20px;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  font-size: 17px;\n  opacity: 0.8;\n  order: 0;\n  @media (max-width: 768px) {\n    font-size: 15px;\n    -webkit-line-clamp: 2;\n  }\n`\nconst ThumbnailImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 200px;\n  height: 200px;\n  border-radius: 30px;\n  margin: 10px;\n  overflow: hidden;\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\nconst ThumbnailImage = styled(GatsbyImage)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`\n","import styled from '@emotion/styled'\nimport SearchIcon from '@mui/icons-material/Search'\nimport { useState } from 'react'\n\ntype SearchProps = {\n  setSearchTerm: React.Dispatch<React.SetStateAction<string>>\n  handleSearch: () => void\n}\n\nconst Search: React.FC<SearchProps> = ({ setSearchTerm, handleSearch }) => {\n  const [inputValue, setInputValue] = useState('')\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value)\n  }\n\n  const handleClick = () => {\n    setSearchTerm(inputValue)\n    handleSearch()\n  }\n\n  return (\n    <SearchWrapper>\n      <SearchInput\n        value={inputValue}\n        onChange={handleChange}\n        placeholder=\"검색어를 입력하세요.\"\n      />\n      <SearchButton onClick={handleClick}>\n        <SearchIcon />\n      </SearchButton>\n    </SearchWrapper>\n  )\n}\n\nexport default Search\n\nconst SearchWrapper = styled.div`\n  position: relative;\n  color: #212121;\n  border: '1px solid #b0bec5';\n  border-radius: 10px;\n  background-color: #f4f2f2;\n  &:hover {\n    background-color: #f4f2f2;\n    border: '1px solid #c9d2d7';\n  }\n  width: 40%;\n  margin: 120px auto;\n  margin-bottom: 60px;\n  @media (max-width: 768px) {\n    width: 90%;\n    margin-top: 100px;\n  }\n`\n\nconst SearchInput = styled.input`\n  padding: 10px;\n  border: none;\n  border-radius: 10px;\n  width: 93%;\n  height: 33px;\n  outline: none;\n  font-size: 16px;\n  color: #212121;\n  background-color: transparent;\n\n  &:focus {\n    border: 2px solid #7d64b1;\n  }\n\n  &::placeholder {\n    color: #757575;\n  }\n  @media (max-width: 768px) {\n    height: 30px;\n  }\n`\n\nconst SearchButton = styled.button`\n  width: 9%;\n  height: 100%;\n  position: absolute;\n  right: 0;\n  top: 0;\n  cursor: pointer;\n  border: none;\n  border-radius: 10px;\n  background: #7d64b1;\n  color: white;\n  align-items: center;\n  justify-content: center;\n  @media (max-width: 768px) {\n    width: 13%;\n  }\n`\n","import React, { useContext, useState } from 'react'\nimport { navigate } from 'gatsby'\nimport { useLocation } from '@reach/router'\nimport queryString from 'query-string'\nimport usePosts from 'hooks/usePosts'\nimport styled from '@emotion/styled'\nimport { ThemeContext } from 'hooks/useTheme'\nimport Header from 'components/Common/Header'\nimport CreateIcon from '@mui/icons-material/Create'\nimport SearchList from 'components/Search/SearchList'\nimport Search from 'components/Search/Seach'\nimport Pagination from 'components/Common/Pagination'\n\nconst SearchResultsPage: React.FC = () => {\n  const { search } = useLocation()\n  const { term = '' } = queryString.parse(search)\n  const [searchTerm, setSearchTerm] = useState(\n    term !== null ? String(term) : '',\n  )\n  const [currentPage, setCurrentPage] = useState(1)\n  const [totalPages, setTotalPages] = useState(1)\n\n  const posts = usePosts()\n  const itemsPerPage = 2\n  const handleSearch = () => {\n    setCurrentPage(1)\n    navigate(`/search?term=${encodeURIComponent(searchTerm)}`)\n  }\n\n  const filteredPosts = posts.filter(\n    post =>\n      post.title?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      post.date.includes(searchTerm) ||\n      post.slug?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      post.excerpt?.toLowerCase().includes(searchTerm.toLowerCase()),\n  )\n  const filteredPost = filteredPosts.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage,\n  )\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page)\n    navigate(`/search/?term=${encodeURIComponent(searchTerm)}&page=${page}`, {\n      replace: true,\n    })\n  }\n\n  const { theme } = useContext(ThemeContext)\n  return (\n    <div>\n      <Header hideSearch={true} />\n      <Search setSearchTerm={setSearchTerm} handleSearch={handleSearch} />\n      {searchTerm !== '' && (\n        <SeachResult>\n          <h2>\n            검색결과 : {searchTerm} ({filteredPosts.length})\n          </h2>\n        </SeachResult>\n      )}\n      <Divider />\n      {filteredPosts.length > 0 && searchTerm !== '' ? (\n        <>\n          <SearchList posts={filteredPost} />\n          <PaginationWrapper>\n            <Pagination\n              count={Math.ceil(filteredPosts.length / itemsPerPage)}\n              defaultPage={currentPage}\n              onChange={handlePageChange}\n              showFirstButton\n              showLastButton\n              path={''}\n            />\n          </PaginationWrapper>\n        </>\n      ) : (\n        <NoDataMessage>\n          <CreateIcon />\n          &nbsp; No Posts Available\n        </NoDataMessage>\n      )}\n    </div>\n  )\n}\n\nexport default SearchResultsPage\n\nconst NoDataMessage = styled.div`\n  margin: 20px;\n  text-align: center;\n  font-size: 25px;\n  color: gray;\n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`\n\nconst SeachResult = styled.div`\n  margin-left: 80px;\n  color: #6343a8;\n  @media (max-width: 768px) {\n    width: calc(100% - 70px);\n    margin: 20px 0px 0px 58px;\n    font-size: 13px;\n  }\n`\nconst Divider = styled.div`\n  border-top: 0.1px solid #c3c7cc;\n  width: calc(100% - 70px);\n  margin: 20px 0 12px 40px;\n  @media (max-width: 768px) {\n    width: calc(100% - 70px);\n    margin: 20px 0px 0px 20px;\n  }\n`\nconst PaginationWrapper = styled.div`\n  display: grid;\n  place-items: center;\n  margin-top: auto;\n  padding: 15px 0;\n  font-size: 15px;\n  text-align: center;\n  line-height: 1.5;\n\n  @media (max-width: 768px) {\n    font-size: 13px;\n  }\n`\n"],"names":["usePosts","useStaticQuery","allMarkdownRemark","nodes","map","post","title","frontmatter","date","slug","fields","excerpt","categories","thumbnail","summary","_ref","posts","theme","useContext","ThemeContext","___EmotionJSX","ListContainer","_post$thumbnail","_post$thumbnail$child","ListItem","to","ItemWrapper","Title","Summary","Category","category","CategoryItem","key","Date","ThumbnailImageContainer","childImageSharp","gatsbyImageData","ThumbnailImage","image","getImage","alt","_styled","target","name","styles","Link","props","GatsbyImage","setSearchTerm","handleSearch","inputValue","setInputValue","useState","SearchWrapper","SearchInput","value","onChange","event","placeholder","SearchButton","onClick","handleClick","SearchIcon","SearchResultsPage","search","useLocation","term","queryString","searchTerm","String","currentPage","setCurrentPage","totalPages","setTotalPages","filteredPosts","filter","_post$title","_post$slug","_post$excerpt","toLowerCase","includes","filteredPost","slice","Header","hideSearch","Search","navigate","encodeURIComponent","SeachResult","length","Divider","React","SearchList","PaginationWrapper","Pagination","count","Math","ceil","defaultPage","page","replace","showFirstButton","showLastButton","path","NoDataMessage","CreateIcon"],"sourceRoot":""}