{"version":3,"file":"3190b68697c16582b2505cb11a78d99decc9dd8d-27eb66bfce371c8374eb.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/CategoryPage/DetailList.tsx","webpack://gatsby-starter-default/./src/components/CategoryPage/DetailPostItem.tsx","webpack://gatsby-starter-default/./src/components/CategoryPage/DetailPostList.tsx","webpack://gatsby-starter-default/./src/components/CategoryPage/Title.tsx","webpack://gatsby-starter-default/./src/constants/PageEA.ts"],"sourcesContent":["import React, { FunctionComponent, useContext, useState } from 'react'\nimport { Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport { ThemeContext } from 'hooks/useTheme'\n\nexport type DetailListProps = {\n  basePath: string\n  selectedDetailCategory: string\n  detailCategoryList: {\n    [key: string]: number\n  }\n  categoriesMap: {\n    value: string\n    label: string\n  }[]\n}\n\ninterface CustomTabProps {\n  to: string\n  label: string\n  selected: boolean\n  theme: string\n  onClick: () => void\n}\n\nconst CustomTab: FunctionComponent<CustomTabProps> = ({\n  to,\n  label,\n  selected,\n  theme,\n  onClick,\n}) => {\n  return (\n    <TabStyle to={to} selected={selected} onClick={onClick} theme={theme}>\n      {label}\n    </TabStyle>\n  )\n}\n\nconst DetailList: FunctionComponent<DetailListProps> = ({\n  basePath,\n  selectedDetailCategory,\n  detailCategoryList,\n  categoriesMap,\n}) => {\n  const [selectedTab, setSelectedTab] = useState(selectedDetailCategory)\n\n  const handleTabClick = (value: string) => {\n    setSelectedTab(value)\n  }\n\n  const labelFromValue = (value: string) => {\n    const found = categoriesMap.find(category => category.value === value)\n    return found ? found.label : value\n  }\n  const { theme } = useContext(ThemeContext)\n  return (\n    <TabContainer theme={theme}>\n      <div\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n        }}\n      >\n        {Object.entries(detailCategoryList).map(([name, count]) => (\n          <CustomTab\n            to={name === 'All' ? `/${basePath}` : `/${basePath}/${name}`}\n            label={`${labelFromValue(name)}(${count})`}\n            selected={name === selectedTab}\n            onClick={() => handleTabClick(name)}\n            key={name}\n            theme={theme}\n          />\n        ))}\n      </div>\n      <Divider />\n    </TabContainer>\n  )\n}\n\nexport default DetailList\n\nconst TabContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: flex-start;\n  width: 100%;\n  height: 230px;\n  position: fixed;\n  z-index: 1;\n  font-size: 30px;\n  background-color: ${props =>\n    props.theme === 'light' ? '#f7fafc' : '#030d11ca'};\n  color: ${props => (props.theme === 'light' ? '#0b1118' : '#f7fafc')};\n  margin: 10px 0 0 0px;\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 250px;\n    font-size: 20px;\n    margin: 20px 0px 0px 0px;\n  }\n`\n\nconst TabStyle = styled(Link)<{ selected: boolean; theme: string }>`\n  font-size: 18px;\n  font-weight: ${({ selected }) => (selected ? 'bold' : 'normal')};\n  position: relative;\n  margin: 0px 30px 10px 43px;\n  &::after {\n    content: '';\n    display: ${({ selected }) => (selected ? 'block' : 'none')};\n    position: absolute;\n    top: 30px;\n    transform: translateX(-4%);\n    height: 3px;\n    width: 110%;\n    background-color: ${props =>\n      props.theme === 'light' ? '#000' : '#f7fafc'};\n  }\n  @media (max-width: 768px) {\n    font-size: 12px;\n  }\n`\n\nconst Divider = styled.div`\n  border-top: 0.1px solid #c3c7cc;\n  width: calc(100% - 80px);\n  margin: 27px 0 -12px 40px;\n  @media (max-width: 768px) {\n    width: calc(100% - 80px);\n    margin: 20px 0px 0px 20px;\n  }\n`\n","import styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { ThemeContext } from 'hooks/useTheme'\nimport { FunctionComponent, useContext } from 'react'\nimport { PostFrontmatterType } from 'types/PostItem.types'\n\ntype DetailPostItemProps = PostFrontmatterType & {\n  link: string\n}\n\nconst DetailPostItem: FunctionComponent<DetailPostItemProps> = ({\n  title,\n  date,\n  categories,\n  summary,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  link,\n}) => {\n  const { theme } = useContext(ThemeContext)\n  return (\n    <DetailPostItemWrapper to={link} theme={theme}>\n      <PostItemContent theme={theme}>\n        <Title>{title}</Title>\n        <Summary>{summary}</Summary>\n        <Category>\n          {categories.map(category => (\n            <CategoryItem key={category}>{category}</CategoryItem>\n          ))}\n        </Category>\n        <Date>{date}</Date>\n      </PostItemContent>\n      <ThumbnailImageContainer>\n        <ThumbnailImage image={gatsbyImageData} alt=\"Post Item Image\" />\n      </ThumbnailImageContainer>\n    </DetailPostItemWrapper>\n  )\n}\n\nexport default DetailPostItem\n\nconst DetailPostItemWrapper = styled(Link)`\n  display: flex;\n  justify-content: space-between;\n  border-radius: 10px;\n  box-shadow: ${props =>\n    props.theme === 'light'\n      ? '0 0 4px rgba(0, 0, 0, 0.15)'\n      : '0 0 4px rgba(255, 255, 255, 0.4)'};\n  transition: 0.3s box-shadow;\n  cursor: pointer;\n  text-decoration: none;\n  &:hover {\n    box-shadow: ${props =>\n      props.theme === 'light'\n        ? '0 0 3px rgba(0, 0, 0, 0.3)'\n        : '0 0 3px rgba(255, 255, 255, 0.3)'};\n    text-decoration: underline;\n  }\n  @media (max-width: 768px) {\n    margin-top: 50px;\n  }\n`\n\nconst PostItemContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 25px;\n  width: 200px;\n  flex-grow: 1;\n  position: relative;\n  color: ${props => (props.theme === 'light' ? 'black' : '#cfd8dc')};\n  @media (max-width: 768px) {\n    margin-bottom: 50px;\n  }\n`\nconst ThumbnailImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 200px;\n  height: 200px;\n  border-radius: 30px;\n  margin: 15px;\n  overflow: hidden;\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst ThumbnailImage = styled(GatsbyImage)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 28px;\n  font-weight: 700;\n  @media (max-width: 768px) {\n    font-size: 20px;\n    font-weight: 700;\n  }\n`\n\nconst Category = styled.span`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 40px 0 0 -5px;\n  position: absolute;\n  bottom: 50px;\n  order: 1;\n  @media (max-width: 768px) {\n    top: 75px;\n  }\n`\nconst Date = styled.span`\n  font-size: 14px;\n  font-weight: 400;\n  opacity: 0.7;\n  position: absolute;\n  bottom: 20px;\n  order: 2;\n  @media (max-width: 768px) {\n    top: 150px;\n  }\n`\n\nconst CategoryItem = styled.div`\n  margin: 2.5px 5px;\n  padding: 3px 5px;\n  border-radius: 3px;\n  background: ${props => (props.theme === 'light' ? 'black' : '#263238')};\n  font-size: 14px;\n  font-weight: 700;\n  color: ${props => (props.theme === 'light' ? 'white' : '#cfd8dc')};\n`\n\nconst Summary = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-top: 20px;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  font-size: 17px;\n  opacity: 0.8;\n  order: 0;\n  @media (max-width: 768px) {\n    font-size: 15px;\n    -webkit-line-clamp: 2;\n  }\n`\n","import styled from '@emotion/styled'\nimport { FunctionComponent, useEffect, useMemo } from 'react'\nimport DetailPostItem from './DetailPostItem'\nimport CreateIcon from '@mui/icons-material/Create'\nimport { PostListItemType, PostListProps } from 'types/PostItem.types'\n\nconst DetailPostList: FunctionComponent<PostListProps> = ({\n  posts,\n  selectedCategory,\n}) => {\n  const detailPostListData = useMemo(\n    () =>\n      posts.filter(\n        ({\n          node: {\n            frontmatter: { categories },\n          },\n        }: PostListItemType) =>\n          selectedCategory !== 'All'\n            ? categories.includes(selectedCategory)\n            : true,\n      ),\n    [posts, selectedCategory],\n  )\n  useEffect(() => {}, [detailPostListData])\n\n  return (\n    <DetailPostListWrapper>\n      {detailPostListData.length === 0 ? (\n        <NoDataMessage>\n          <CreateIcon />\n          &nbsp; No Posts Available\n        </NoDataMessage>\n      ) : (\n        detailPostListData.map(\n          ({\n            node: {\n              id,\n              frontmatter,\n              fields: { slug },\n            },\n          }: PostListItemType) => (\n            <DetailPostItem {...frontmatter} link={slug} key={id} />\n          ),\n        )\n      )}\n    </DetailPostListWrapper>\n  )\n}\n\nexport default DetailPostList\n\nconst DetailPostListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  grid-gap: 15px;\n  width: calc(100% - 70px);\n  margin: 20px;\n  padding: 40px;\n  transform: translateY(230px);\n\n  @media (max-width: 768px) {\n    width: calc(100% - 20px);\n    margin: 1px;\n    grid-gap: 1px;\n    transform: translateY(200px);\n  }\n`\nconst NoDataMessage = styled.div`\n  margin: 100px;\n  font-size: 25px;\n  text-align: center;\n  color: gray;\n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`\n","import styled from '@emotion/styled'\nimport { ThemeContext } from 'hooks/useTheme'\nimport { useContext } from 'react'\n\ntype TitleProps = {\n  titleText: string\n}\n\nconst Title: React.FC<TitleProps> = ({ titleText }) => {\n  const { theme } = useContext(ThemeContext)\n  return (\n    <Background theme={theme}>\n      <Wrapper>\n        <TitleStyle>{titleText}</TitleStyle>\n      </Wrapper>\n    </Background>\n  )\n}\nexport default Title\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: flex-start;\n  width: 100%;\n  height: 160px;\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 140px;\n  }\n`\nconst Background = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  left: 0px;\n  position: fixed;\n  margin-bottom: 150px;\n  z-index: 2;\n  background-color: ${props =>\n    props.theme === 'light' ? '#90a4ae' : '#0b1118'};\n  color: #ffffff;\n`\n\nconst TitleStyle = styled.div`\n  font-size: 30px;\n  font-weight: 600;\n  margin: 36px 50px;\n  @media (max-width: 768px) {\n    font-size: 20px;\n    margin: 31px 20px;\n  }\n`\n","export const POSTS_PER_PAGE = 2\n"],"names":["CustomTab","_ref","to","label","selected","theme","onClick","___EmotionJSX","TabStyle","_ref2","basePath","selectedDetailCategory","detailCategoryList","categoriesMap","selectedTab","setSelectedTab","useState","labelFromValue","value","found","find","category","useContext","ThemeContext","TabContainer","style","display","flexWrap","justifyContent","Object","entries","map","_ref3","name","count","key","Divider","_styled","target","props","Link","_ref4","_ref5","styles","title","date","categories","summary","thumbnail","childImageSharp","gatsbyImageData","link","DetailPostItemWrapper","PostItemContent","Title","Summary","Category","CategoryItem","Date","ThumbnailImageContainer","ThumbnailImage","image","alt","GatsbyImage","posts","selectedCategory","detailPostListData","useMemo","filter","node","frontmatter","includes","useEffect","DetailPostListWrapper","length","NoDataMessage","CreateIcon","id","fields","slug","DetailPostItem","_extends","titleText","Background","Wrapper","TitleStyle","POSTS_PER_PAGE"],"sourceRoot":""}