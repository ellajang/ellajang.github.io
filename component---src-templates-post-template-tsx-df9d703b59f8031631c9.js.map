{"version":3,"file":"component---src-templates-post-template-tsx-df9d703b59f8031631c9.js","mappings":"2TASA,MAJiC,kB,oBCH1B,SAASA,EAAoBC,GAClC,OAAO,EAAAC,EAAA,GAAqB,UAAWD,EACzC,CACA,MAGME,EAAa,CAAC,QAAQ,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAUrE,OAToB,EAAAC,EAAA,GAAuB,UAAW,CAAC,OAAQ,YAAa,OAAQ,kBAJnE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAMpCC,KAAIC,GAAW,cAAcA,SALtB,CAAC,iBAAkB,SAAU,cAAe,OAOjDD,KAAIE,GAAa,gBAAgBA,SANjC,CAAC,SAAU,eAAgB,QAQhCF,KAAIG,GAAQ,WAAWA,SAE7BL,EAAWE,KAAII,GAAQ,WAAWA,SAAYN,EAAWE,KAAII,GAAQ,WAAWA,SAAYN,EAAWE,KAAII,GAAQ,WAAWA,SAAYN,EAAWE,KAAII,GAAQ,WAAWA,SAAYN,EAAWE,KAAII,GAAQ,WAAWA,Q,UCf7N,MAAMC,EAAY,CAAC,YAAa,UAAW,gBAAiB,YAAa,YAAa,YAAa,OAAQ,aAAc,UAAW,OAAQ,gBAuB5I,SAASC,EAAUC,GACjB,MAAMC,EAAQC,WAAWF,GACzB,MAAO,GAAGC,IAAQE,OAAOH,GAAKI,QAAQD,OAAOF,GAAQ,KAAO,MAC9D,CAmGA,SAASI,GAA+B,YACtCC,EAAW,OACXC,IAEA,IAAIC,EAAa,GACjBC,OAAOC,KAAKH,GAAQI,SAAQC,IACP,KAAfJ,GAGgB,IAAhBD,EAAOK,KACTJ,EAAaI,EACf,IAEF,MAAMC,EAA8BJ,OAAOC,KAAKJ,GAAaQ,MAAK,CAACC,EAAGC,IAC7DV,EAAYS,GAAKT,EAAYU,KAEtC,OAAOH,EAA4BI,MAAM,EAAGJ,EAA4BK,QAAQV,GAClF,CA2HA,MAAMW,GAAW,EAAAC,EAAA,IAAO,MAAO,CAC7BC,KAAM,UACNhC,KAAM,OACNiC,kBAAmB,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,GACE,UACJG,EAAS,UACT/B,EAAS,KACTgC,EAAI,QACJjC,EAAO,KACPE,EAAI,aACJgC,EAAY,YACZtB,GACEmB,EACJ,IAAII,EAAgB,GAGhBH,IACFG,EA9CC,SAA8BnC,EAASY,EAAakB,EAAS,CAAC,GAEnE,IAAK9B,GAAWA,GAAW,EACzB,MAAO,GAGT,GAAuB,iBAAZA,IAAyBoC,OAAOC,MAAMD,OAAOpC,KAAgC,iBAAZA,EAC1E,MAAO,CAAC8B,EAAO,cAAcrB,OAAOT,OAGtC,MAAMmC,EAAgB,GAOtB,OANAvB,EAAYK,SAAQqB,IAClB,MAAMC,EAAQvC,EAAQsC,GAClBF,OAAOG,GAAS,GAClBJ,EAAcK,KAAKV,EAAO,WAAWQ,KAAc7B,OAAO8B,MAC5D,IAEKJ,CACT,CA4BsBM,CAAqBzC,EAASY,EAAakB,IAE7D,MAAMY,EAAoB,GAO1B,OANA9B,EAAYK,SAAQqB,IAClB,MAAMC,EAAQR,EAAWO,GACrBC,GACFG,EAAkBF,KAAKV,EAAO,QAAQQ,KAAc7B,OAAO8B,MAC7D,IAEK,CAACT,EAAOa,KAAMX,GAAaF,EAAOE,UAAWC,GAAQH,EAAOG,KAAMC,GAAgBJ,EAAOI,gBAAiBC,EAA6B,QAAdlC,GAAuB6B,EAAO,gBAAgBrB,OAAOR,MAAwB,SAATC,GAAmB4B,EAAO,WAAWrB,OAAOP,SAAawC,EAAkB,GA7BlQ,EA+Bd,EACDX,iBACI,OAAS,CACba,UAAW,cACVb,EAAWC,WAAa,CACzBa,QAAS,OACTC,SAAU,OACVC,MAAO,QACNhB,EAAWE,MAAQ,CACpBe,OAAQ,GACPjB,EAAWG,cAAgB,CAC5Be,SAAU,GACW,SAApBlB,EAAW7B,MAAmB,CAC/B4C,SAAUf,EAAW7B,SApNhB,UAA2B,MAChCgD,EAAK,WACLnB,IAEA,MAAMoB,GAAkB,QAAwB,CAC9CtC,OAAQkB,EAAW9B,UACnBW,YAAasC,EAAMtC,YAAYC,SAEjC,OAAO,QAAkB,CACvBqC,SACCC,GAAiBC,IAClB,MAAMC,EAAS,CACbC,cAAeF,GAOjB,OALoC,IAAhCA,EAAU5B,QAAQ,YACpB6B,EAAO,QAAQ,UAAsB,CACnCE,SAAU,SAGPF,CAAM,GAEjB,IAyBO,UAAwB,MAC7BH,EAAK,WACLnB,IAEA,MAAM,UACJC,EAAS,WACTwB,GACEzB,EACJ,IAAID,EAAS,CAAC,EACd,GAAIE,GAA4B,IAAfwB,EAAkB,CACjC,MAAMC,GAAmB,QAAwB,CAC/C5C,OAAQ2C,EACR5C,YAAasC,EAAMtC,YAAYC,SAEjC,IAAI6C,EAC4B,iBAArBD,IACTC,EAA0B/C,EAA+B,CACvDC,YAAasC,EAAMtC,YAAYC,OAC/BA,OAAQ4C,KAGZ3B,GAAS,QAAkB,CACzBoB,SACCO,GAAkB,CAACL,EAAWd,KAC/B,IAAIqB,EACJ,MAAMC,EAAeV,EAAMlD,QAAQoD,GACnC,MAAqB,QAAjBQ,EACK,CACLC,UAAW,IAAIxD,EAAUuD,KACzB,CAAC,QAAQ,UAAqB,CAC5BE,WAAYzD,EAAUuD,KAI6B,OAApDD,EAAwBD,IAAoCC,EAAsBI,SAASzB,GACvF,CAAC,EAEH,CACLuB,UAAW,EACX,CAAC,QAAQ,UAAqB,CAC5BC,WAAY,GAEf,GAEL,CACA,OAAOhC,CACT,IACO,UAA2B,MAChCoB,EAAK,WACLnB,IAEA,MAAM,UACJC,EAAS,cACTgC,GACEjC,EACJ,IAAID,EAAS,CAAC,EACd,GAAIE,GAA+B,IAAlBgC,EAAqB,CACpC,MAAMC,GAAsB,QAAwB,CAClDpD,OAAQmD,EACRpD,YAAasC,EAAMtC,YAAYC,SAEjC,IAAI6C,EAC+B,iBAAxBO,IACTP,EAA0B/C,EAA+B,CACvDC,YAAasC,EAAMtC,YAAYC,OAC/BA,OAAQoD,KAGZnC,GAAS,QAAkB,CACzBoB,SACCe,GAAqB,CAACb,EAAWd,KAClC,IAAI4B,EACJ,MAAMN,EAAeV,EAAMlD,QAAQoD,GACnC,MAAqB,QAAjBQ,EACK,CACLb,MAAO,eAAe1C,EAAUuD,MAChCO,WAAY,IAAI9D,EAAUuD,KAC1B,CAAC,QAAQ,UAAqB,CAC5BQ,YAAa/D,EAAUuD,KAI6B,OAArDM,EAAyBR,IAAoCQ,EAAuBH,SAASzB,GACzF,CAAC,EAEH,CACLS,MAAO,OACPoB,WAAY,EACZ,CAAC,QAAQ,UAAqB,CAC5BC,YAAa,GAEhB,GAEL,CACA,OAAOtC,CACT,IAnNO,UAAsB,MAC3BoB,EAAK,WACLnB,IAEA,IAAI5B,EACJ,OAAO+C,EAAMtC,YAAYI,KAAKqD,QAAO,CAACC,EAAchC,KAElD,IAAIR,EAAS,CAAC,EAId,GAHIC,EAAWO,KACbnC,EAAO4B,EAAWO,KAEfnC,EACH,OAAOmE,EAET,IAAa,IAATnE,EAEF2B,EAAS,CACPyC,UAAW,EACXC,SAAU,EACVjB,SAAU,aAEP,GAAa,SAATpD,EACT2B,EAAS,CACPyC,UAAW,OACXC,SAAU,EACVC,WAAY,EACZlB,SAAU,OACVR,MAAO,YAEJ,CACL,MAAM2B,GAA0B,QAAwB,CACtD7D,OAAQkB,EAAW4C,QACnB/D,YAAasC,EAAMtC,YAAYC,SAE3B+D,EAAiD,iBAA5BF,EAAuCA,EAAwBpC,GAAcoC,EACxG,GAAIE,QACF,OAAON,EAGT,MAAMvB,EAAW8B,KAAKC,MAAM3E,EAAOyE,EAAc,KAAQ,IAA3C,IACd,IAAIG,EAAO,CAAC,EACZ,GAAIhD,EAAWC,WAAaD,EAAWE,MAAqC,IAA7BF,EAAWiC,cAAqB,CAC7E,MAAMJ,EAAeV,EAAMlD,QAAQ+B,EAAWiC,eAC9C,GAAqB,QAAjBJ,EAAwB,CAC1B,MAAMoB,EAAY,QAAQjC,OAAW1C,EAAUuD,MAC/CmB,EAAO,CACLR,UAAWS,EACXzB,SAAUyB,EAEd,CACF,CAIAlD,GAAS,OAAS,CAChByC,UAAWxB,EACXyB,SAAU,EACVjB,SAAUR,GACTgC,EACL,CAQA,OAL6C,IAAzC7B,EAAMtC,YAAYC,OAAOyB,GAC3BvB,OAAOkE,OAAOX,EAAcxC,GAE5BwC,EAAapB,EAAMtC,YAAYsE,GAAG5C,IAAeR,EAE5CwC,CAAY,GAClB,CAAC,EACN,IA2OA,MAAMa,EAAoBpD,IACxB,MAAM,QACJqD,EAAO,UACPpD,EAAS,UACT/B,EAAS,KACTgC,EAAI,QACJjC,EAAO,KACPE,EAAI,aACJgC,EAAY,YACZtB,GACEmB,EACJ,IAAIsD,EAAiB,GAGjBrD,IACFqD,EAnCG,SAA+BrF,EAASY,GAE7C,IAAKZ,GAAWA,GAAW,EACzB,MAAO,GAGT,GAAuB,iBAAZA,IAAyBoC,OAAOC,MAAMD,OAAOpC,KAAgC,iBAAZA,EAC1E,MAAO,CAAC,cAAcS,OAAOT,MAG/B,MAAMoF,EAAU,GAQhB,OAPAxE,EAAYK,SAAQqB,IAClB,MAAMC,EAAQvC,EAAQsC,GACtB,GAAIF,OAAOG,GAAS,EAAG,CACrB,MAAM+C,EAAY,WAAWhD,KAAc7B,OAAO8B,KAClD6C,EAAQ5C,KAAK8C,EACf,KAEKF,CACT,CAgBqBG,CAAsBvF,EAASY,IAElD,MAAM4E,EAAqB,GAC3B5E,EAAYK,SAAQqB,IAClB,MAAMC,EAAQR,EAAWO,GACrBC,GACFiD,EAAmBhD,KAAK,QAAQF,KAAc7B,OAAO8B,KACvD,IAEF,MAAMkD,EAAQ,CACZ9C,KAAM,CAAC,OAAQX,GAAa,YAAaC,GAAQ,OAAQC,GAAgB,kBAAmBmD,EAA8B,QAAdpF,GAAuB,gBAAgBQ,OAAOR,KAAuB,SAATC,GAAmB,WAAWO,OAAOP,QAAYsF,IAE3N,OAAO,EAAAE,EAAA,GAAeD,EAAO/F,EAAqB0F,EAAQ,EAEtDO,EAAoB,cAAiB,SAAcC,EAASC,GAChE,MAAMC,GAAa,EAAAC,EAAA,GAAc,CAC/BlE,MAAO+D,EACPjE,KAAM,aAEF,YACJf,IACE,EAAAoF,EAAA,KACEnE,GAAQ,EAAAoE,EAAA,GAAaH,IACrB,UACFR,EACAX,QAASuB,EACTlC,cAAemC,EAAiB,UAChCC,EAAY,MAAK,UACjBpE,GAAY,EAAK,UACjB/B,EAAY,MAAK,KACjBgC,GAAO,EACPuB,WAAY6C,EAAc,QAC1BrG,EAAU,EAAC,KACXE,EAAO,OAAM,aACbgC,GAAe,GACbL,EACJyE,GAAQ,OAA8BzE,EAAOzB,GACzCoD,EAAa6C,GAAkBrG,EAC/BgE,EAAgBmC,GAAqBnG,EACrCuG,EAAiB,aAAiB,GAGlC5B,EAAU3C,EAAYkE,GAAe,GAAKK,EAC1CC,EAAoB,CAAC,EACrBC,GAAgB,OAAS,CAAC,EAAGH,GACnC1F,EAAYI,KAAKC,SAAQqB,IACE,MAArBgE,EAAMhE,KACRkE,EAAkBlE,GAAcgE,EAAMhE,UAC/BmE,EAAcnE,GACvB,IAEF,MAAMP,GAAa,OAAS,CAAC,EAAGF,EAAO,CACrC8C,UACA3C,YACA/B,YACAgC,OACAuB,aACAQ,gBACA9D,OACAgC,eACAlC,WACCwG,EAAmB,CACpB5F,YAAaA,EAAYI,OAErBoE,EAAUD,EAAkBpD,GAClC,OAAoB,SAAK,WAAsB,CAC7CQ,MAAOoC,EACP+B,UAAuB,SAAKjF,GAAU,OAAS,CAC7CM,WAAYA,EACZuD,WAAW,OAAKF,EAAQzC,KAAM2C,GAC9BqB,GAAIP,EACJP,IAAKA,GACJY,KAEP,IA+IA,Q,SCvgBA,MAlCkDG,IAI5C,IAJ6C,MACjDC,EAAK,KACLC,EAAI,WACJC,GACDH,EAOC,OACEI,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACED,EAAAA,EAAAA,KAACE,EAAmB,MAClBF,EAAAA,EAAAA,KAACG,EAA0B,MACzBH,EAAAA,EAAAA,KAACI,EAAAA,EAAmB,CAClBC,QAXSC,KACK,oBAAXC,QACTA,OAAOC,QAAQC,MACjB,EASQC,GAAI,CAAEC,SAAU,GAAIC,MAAO,aAG/BZ,EAAAA,EAAAA,KAACa,EAAK,KAAEhB,IACRG,EAAAA,EAAAA,KAACc,EAAO,MACNd,EAAAA,EAAAA,KAACrB,EAAI,CAACiC,MAAM,QAAQ5F,WAAS,EAAChC,SAAU,MACtCgH,EAAAA,EAAAA,KAAA,WAAMD,EAAWgB,KAAK,UAExBf,EAAAA,EAAAA,KAACrB,EAAI,CAACiC,MAAM,UACVZ,EAAAA,EAAAA,KAAA,WAAMF,MAIX,EAMP,MAAMe,GAAKG,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAArG,KAAA,SAAAG,OAAA,qUAoBLqF,GAA0Ba,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAArG,KAAA,SAAAG,OAAA,mIAS1BgG,GAAOE,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAArG,KAAA,SAAAG,OAAA,wLAWPoF,GAAmBc,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAArG,KAAA,UAAAG,OAAA,kKClDzB,MAjB0C8E,IAKpC,IALqC,MACzCC,EAAK,KACLC,EAAI,WACJC,EAAU,UACVmB,GACDtB,EACC,OACEI,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACED,EAAAA,EAAAA,KAACmB,EAAe,MACdnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,OACPpB,EAAAA,EAAAA,KAACqB,EAAe,CAACC,MAAOJ,EAAWK,IAAI,eACvCvB,EAAAA,EAAAA,KAACwB,EAAY,CAAC3B,MAAOA,EAAOC,KAAMA,EAAMC,WAAYA,KAErD,EAMP,MAAMoB,GAAeH,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAArG,KAAA,UAAAG,OAAA,0GAWfuG,GAAkBL,EAAAA,EAAAA,IAAQnG,IAC9BmF,EAAAA,EAAAA,KAACyB,EAAAA,GAAWC,EAAAA,EAAAA,GAAA,GAAK7G,EAAK,CAAE8G,MAAO,CAAEC,SAAU,gBAC5C,CAAAX,OAAA,aAFuBD,CAEtB,CAAArG,KAAA,UAAAG,OAAA,sG,wBChCF,MAZgD8E,IAAc,IAAb,KAAEiC,GAAMjC,EACvD,MAAM1D,GAAQ4F,EAAAA,EAAAA,YAAWC,EAAAA,GACzB,OACE/B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACED,EAAAA,EAAAA,KAACgC,EAAgB,CACf9F,MAAOA,EACP+F,wBAAyB,CAAEC,OAAQL,KAEpC,EAMP,MAAMG,GAAmBhB,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,EAAW,KAClC,MAAM9E,GAAQ4F,EAAAA,EAAAA,YAAWC,EAAAA,GACzB,MAAO,CAELlG,QAAS,OACTS,cAAe,SACfP,MAAO,QACPC,OAAQ,SACRmG,QAAS,UACTC,UAAW,YACXxB,MAAuB,SAAhB1E,EAAMA,MAAmB,UAAY,UAE5CmG,WAAY,IACZ1B,SAAU,OACV2B,WAAY,IAGZC,EAAG,CACDJ,QAAS,SAGXK,GAAI,CACFxG,OAAQ,qBAGV,cAAe,CACbyG,OAAQ,UACR,iBAAkB,CAChB9B,SAAU,SAKd,WAAY,CACV2B,WAAY,IACZI,aAAc,QAGhB,uBAAwB,CACtB7F,UAAW,QAGb,0BAA2B,CACzBA,UAAW,GAGb8F,GAAI,CACFhC,SAAU,QAGZiC,GAAI,CACFjC,SAAU,QAGZkC,GAAI,CACFlC,SAAU,QAEZmC,GAAI,CACFnC,SAAU,QAGZ,YAAa,CACXC,MAAO,WAET,UAAW,CACTA,MAAO,WAITmC,WAAY,CACVZ,QAAS,WACTa,WAAY,oBACZV,WAAY,IACZ3B,SAAU,QAIZ,QAAS,CACPxD,WAAY,OACZgF,QAAS,UAEXc,GAAI,CACFpG,UAAW,OAIbqG,GAAI,CACFlH,OAAQ,WAIV3B,EAAG,CACDuG,MAAO,UACPuC,eAAgB,aAIlB,0BAA2B,CACzBnH,OAAQ,SACRmG,QAAS,OACTxB,SAAU,OACV,4BAA6B,CAC3ByC,WAAY,2BACZC,aAAc,QAIlBC,IAAK,CACHC,gBAAiC,UAAhBrH,EAAMA,MAAoB,UAAY,WAEzD,oDAAqD,CACnDsH,QAAS,EACT5C,MAAuB,SAAhB1E,EAAMA,MAAmB,UAAY,WAE9C,+BAAgC,CAC9BkH,WAAY,UACZxC,MAAO,QACPD,SAAU,QAEZ,2CAA4C,CAC1CyC,WAAY,MACZxC,MAAO,QACPD,SAAU,QAIZ,4BAA6B,CAC3B5E,MAAO,OACPoG,QAAS,YACTE,WAAY,IACZ1B,SAAU,OACVgC,GAAI,CACFhC,SAAU,QAEZiC,GAAI,CACFjC,SAAU,QAEZkC,GAAI,CACFlC,SAAU,QAEZmC,GAAI,CACFnC,SAAU,QAEZ8C,IAAK,CACH1H,MAAO,QAETmH,GAAI,CACFlH,OAAQ,WAGb,GACF,ICzHD,MAnCgC0H,KAC9B,MAAMC,GAAUC,EAAAA,EAAAA,cACV,MAAE1H,IAAU4F,EAAAA,EAAAA,YAAWC,EAAAA,GA0B7B,OAxBA8B,EAAAA,EAAAA,YAAU,KACR,GAAwB,OAApBF,EAAQG,QAAkB,OAE9B,KAAOH,EAAQG,QAAQC,YACrBJ,EAAQG,QAAQC,WAAWC,SAG7B,MAAMC,EAAgCC,SAASC,cAAc,UAEvDC,EAAuC,CAC3CC,IA3BM,gCA4BNC,KA3BO,8BA4BP,aAAc,WACdC,MAAO,UACPrI,MAAiB,UAAVA,EAAiB,eAAoB,YAC5CsI,YAAa,YACbC,MAAO,QAET1K,OAAO2K,QAAQN,GAAYnK,SAAQ2F,IAAmB,IAAjB1F,EAAKqB,GAAMqE,EAC9CqE,EAAWU,aAAazK,EAAKqB,EAAM,IAGrCoI,EAAQG,QAAQc,YAAYX,EAAW,GACtC,CAAC/H,KAEF8D,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACED,EAAAA,EAAAA,KAAC6E,EAAiB,CAAChG,IAAK8E,IACvB,EAMP,MAAMkB,GAAiB7D,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAArG,KAAA,SAAAG,OAAA,+CCkBvB,MA7CkD8E,IAK5C,IAJJkF,MACEC,mBAAmB,MAAEC,IAEvBC,UAAU,KAAEC,IACbtF,EACC,MACEuF,MAAM,KACJtD,EACAuD,aAAa,MACXvF,EAAK,KACLC,EAAI,QACJuF,EAAO,WACPtF,EACAmB,WACEoE,iBAAiB,gBAAEC,GAAiB,UACpCC,MAIJR,EAAM,GAEV,OACEhF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACED,EAAAA,EAAAA,KAACyF,EAAAA,EAAoB,MACnBzF,EAAAA,EAAAA,KAAC0F,EAAAA,EAAQ,CACP7F,MAAOA,EACP8F,YAAaN,EACbO,IAAKV,EACL5D,MAAOkE,IAEPxF,EAAAA,EAAAA,KAAC6F,EAAQ,CACPhG,MAAOA,EACPC,KAAMA,EACNC,WAAYA,EACZmB,UAAWqE,KAEbvF,EAAAA,EAAAA,KAAC8F,EAAW,CAACjE,KAAMA,KACnB7B,EAAAA,EAAAA,KAAC0D,EAAa,QAGjB,C,yBCnEHqC,EAAyB,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,OAChDG,EAAc,EAAQ,MACtBC,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,iGACD,mBACJN,EAAQ,EAAUG,C","sources":["webpack://gatsby-starter-default/../../../node_modules/@mui/material/Grid/GridContext.js","webpack://gatsby-starter-default/../../../node_modules/@mui/material/Grid/gridClasses.js","webpack://gatsby-starter-default/../../../node_modules/@mui/material/Grid/Grid.js","webpack://gatsby-starter-default/./src/components/Post/PostHeadInfo.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHead.tsx","webpack://gatsby-starter-default/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-default/./src/components/Post/CommentWidget.tsx","webpack://gatsby-starter-default/./src/templates/post-template.tsx","webpack://gatsby-starter-default/../../../node_modules/@mui/icons-material/ArrowCircleLeft.js"],"sourcesContent":["import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst GridContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\nexport default GridContext;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth',\n// spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`),\n// direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`),\n// wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`),\n// grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK2;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK2 = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK2.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap !== 'wrap' && {\n  flexWrap: ownerState.wrap\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n      className,\n      columns: columnsProp,\n      columnSpacing: columnSpacingProp,\n      component = 'div',\n      container = false,\n      direction = 'row',\n      item = false,\n      rowSpacing: rowSpacingProp,\n      spacing = 0,\n      wrap = 'wrap',\n      zeroMinWidth = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = _extends({}, other);\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing\n  }, breakpointsValues, {\n    breakpoints: breakpoints.keys\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\nexport default Grid;","import React from 'react'\n\nimport ArrowCircleLeftIcon from '@mui/icons-material/ArrowCircleLeft'\nimport styled from '@emotion/styled'\nimport { Grid } from '@mui/material'\n\nexport type PostHeadInfoProps = {\n  title: string\n  date: string\n  categories: string[]\n}\n\nconst PostHeadInfo: React.FC<PostHeadInfoProps> = ({\n  title,\n  date,\n  categories,\n}) => {\n  const goBackPage = () => {\n    if (typeof window !== 'undefined') {\n      window.history.back()\n    }\n  }\n\n  return (\n    <>\n      <PostHeadInfoWrapper>\n        <ArrowCircleLeftIconDisplay>\n          <ArrowCircleLeftIcon\n            onClick={goBackPage}\n            sx={{ fontSize: 45, color: 'white' }}\n          />\n        </ArrowCircleLeftIconDisplay>\n        <Title>{title}</Title>\n        <AllGrid>\n          <Grid color=\"white\" container spacing={-130}>\n            <div>{categories.join(' / ')}</div>\n          </Grid>\n          <Grid color=\"white\">\n            <div>{date}</div>\n          </Grid>\n        </AllGrid>\n      </PostHeadInfoWrapper>\n    </>\n  )\n}\n\nexport default PostHeadInfo\n\nconst Title = styled.div`\n  overflow: hidden;\n  overflow-wrap: break-word;\n  margin-top: 120px;\n  max-width: 1180px;\n  padding: 0px 0px 20px 470px;\n  text-overflow: ellipsis;\n  white-space: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 39px;\n  font-weight: 800;\n  color: white;\n  @media (max-width: 1168px) {\n    font-size: 30px;\n    margin-top: 80px;\n    padding: 0px 0px 20px 0px;\n  }\n`\n\nconst ArrowCircleLeftIconDisplay = styled.div`\n  cursor: pointer;\n  padding: 120px 0px 0px 470px;\n  @media (max-width: 1168px) {\n    font-size: 30px;\n    margin-top: 80px;\n    padding: 0px 0px 0px 0px;\n  }\n`\nconst AllGrid = styled.div`\n  display: flex;\n  padding: 0px 0px 0px 150px;\n  justify-content: space-evenly;\n  @media (max-width: 1168px) {\n    font-size: 11px;\n    padding: 0px 20px 0px 0px;\n    display: flex;\n    justify-content: space-between;\n  }\n`\nconst PostHeadInfoWrapper = styled.div`\n  padding: 0px 150px 0px 0px;\n  place-items: center;\n  position: relative;\n  z-index: 1;\n  @media (max-width: 1168px) {\n    font-size: 11px;\n    margin-top: 20px;\n    padding: 0px 0px 0px 20px;\n  }\n`\n","import React from 'react'\n\nimport styled from '@emotion/styled'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\nimport Header from 'components/Common/Header'\n\nimport PostHeadInfo from './PostHeadInfo'\n\ntype GatsbyImgProps = {\n  image: IGatsbyImageData\n  alt: string\n  className?: string\n}\n\ntype PostHeadProps = {\n  thumbnail: IGatsbyImageData\n  title: string\n  date: string\n  categories: string[]\n}\n\nconst PostHead: React.FC<PostHeadProps> = ({\n  title,\n  date,\n  categories,\n  thumbnail,\n}) => {\n  return (\n    <>\n      <PostHeadWrapper>\n        <Header />\n        <BackgroundImage image={thumbnail} alt=\"thumbnail\" />\n        <PostHeadInfo title={title} date={date} categories={categories} />\n      </PostHeadWrapper>\n    </>\n  )\n}\n\nexport default PostHead\n\nconst PostHeadWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 430px;\n  margin: 0;\n  padding: 0;\n  @media (max-width: 768px) {\n    height: 300px;\n  }\n`\n\nconst BackgroundImage = styled((props: GatsbyImgProps) => (\n  <GatsbyImage {...props} style={{ position: 'absolute' }} />\n))`\n  z-index: 0;\n  width: 100%;\n  height: 100%;\n  filter: brightness(0.25);\n  @media (max-width: 768px) {\n    height: 300px;\n  }\n`\n","import React, { useContext } from 'react'\n\nimport styled from '@emotion/styled'\nimport { ThemeContext } from 'hooks/useTheme'\n\ninterface PostContentProps {\n  html: string\n}\n\nconst PostContent: React.FC<PostContentProps> = ({ html }) => {\n  const theme = useContext(ThemeContext)\n  return (\n    <>\n      <MarkdownRenderer\n        theme={theme}\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n    </>\n  )\n}\n\nexport default PostContent\n\nconst MarkdownRenderer = styled.div(() => {\n  const theme = useContext(ThemeContext)\n  return {\n    // Renderer Style\n    display: 'flex',\n    flexDirection: 'column',\n    width: '768px',\n    margin: '0 auto',\n    padding: '100px 0',\n    wordBreak: 'break-all',\n    color: theme.theme === 'dark' ? '#f4f4f4' : '#303134',\n    // Markdown Style\n    lineHeight: 1.8,\n    fontSize: '16px',\n    fontWeight: 400,\n\n    // Apply Padding Attribute to All Elements\n    p: {\n      padding: '3px 0',\n    },\n\n    ol: {\n      margin: '0px 0px -20px 0px',\n    },\n\n    'abbr[title]': {\n      cursor: 'pointer',\n      '&:hover::after': {\n        fontSize: '40px',\n      },\n    },\n\n    // Adjust Heading Element Style\n    'h1,h2,h3': {\n      fontWeight: 700,\n      marginBottom: '30px',\n    },\n\n    '* + h1,* + h2,* + h3': {\n      marginTop: '80px',\n    },\n\n    'hr + h1,hr + h2,hr + h3': {\n      marginTop: 0,\n    },\n\n    h1: {\n      fontSize: '30px',\n    },\n\n    h2: {\n      fontSize: '25px',\n    },\n\n    h3: {\n      fontSize: '20px',\n    },\n    h4: {\n      fontSize: '18px',\n    },\n\n    'strong em': {\n      color: '#7d64b1',\n    },\n    'strong ': {\n      color: '#7d64b1',\n    },\n\n    // Adjust Quotation Element Style\n    blockquote: {\n      padding: '5px 15px',\n      borderLeft: '7px solid #7d64b1',\n      fontWeight: 300,\n      fontSize: '20px',\n    },\n\n    // Adjust List Element Style\n    'ol,ul': {\n      marginLeft: '20px',\n      padding: '10px 0',\n    },\n    li: {\n      marginTop: '1px',\n    },\n\n    // Adjust Horizontal Rule style\n    hr: {\n      margin: '100px 0',\n    },\n\n    // Adjust Link Element Style\n    a: {\n      color: '#4263eb',\n      textDecoration: 'underline',\n    },\n\n    // Adjust Code Style\n    \"pre[class*='language-']\": {\n      margin: '15px 0',\n      padding: '15px',\n      fontSize: '15px',\n      '::-webkit-scrollbar-thumb': {\n        background: 'rgba(255, 255, 255, 0.5)',\n        borderRadius: '3px',\n      },\n    },\n    // code block settings\n    pre: {\n      backgroundColor: theme.theme === 'light' ? '#f4f4f4' : '#303134',\n    },\n    \"code[class*='language-'], pre[class*='language-']\": {\n      tabSize: 2,\n      color: theme.theme === 'dark' ? '#f4f4f4' : '#303134',\n    },\n    \"code[class*='language-text']\": {\n      background: '#5cb85c',\n      color: 'white',\n      fontSize: '15px',\n    },\n    \"code[class*='language-text'].other-color\": {\n      background: 'red',\n      color: 'white',\n      fontSize: '15px',\n    },\n\n    // Markdown Responsive Design\n    '@media (max-width: 768px)': {\n      width: '100%',\n      padding: '80px 20px',\n      lineHeight: 1.6,\n      fontSize: '14px',\n      h1: {\n        fontSize: '23px',\n      },\n      h2: {\n        fontSize: '20px',\n      },\n      h3: {\n        fontSize: '17px',\n      },\n      h4: {\n        fontSize: '14px',\n      },\n      img: {\n        width: '100%',\n      },\n      hr: {\n        margin: '50px 0',\n      },\n    },\n  }\n})\n","import React, { createRef, useContext, useEffect } from 'react'\n\nimport styled from '@emotion/styled'\nimport { ThemeContext } from 'hooks/useTheme'\n\nconst src = 'https://utteranc.es/client.js'\nconst repo = 'ellajang/ellajang.github.io'\n\ntype UtterancesAttributesType = {\n  src: string\n  repo: string\n  'issue-term': string\n  label: string\n  theme: string\n  crossorigin: string\n  async: string\n}\n\nconst CommentWidget: React.FC = () => {\n  const element = createRef<HTMLDivElement>()\n  const { theme } = useContext(ThemeContext)\n\n  useEffect(() => {\n    if (element.current === null) return\n\n    while (element.current.firstChild) {\n      element.current.firstChild.remove()\n    }\n\n    const utterances: HTMLScriptElement = document.createElement('script')\n\n    const attributes: UtterancesAttributesType = {\n      src,\n      repo,\n      'issue-term': 'pathname',\n      label: 'Comment',\n      theme: theme === 'light' ? `github-light` : 'dark-blue',\n      crossorigin: 'anonymous',\n      async: 'true',\n    }\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value)\n    })\n\n    element.current.appendChild(utterances)\n  }, [theme])\n  return (\n    <>\n      <UtterancesWrapper ref={element} />\n    </>\n  )\n}\n\nexport default CommentWidget\n\nconst UtterancesWrapper = styled.div`\n  @media (max-width: 768px) {\n    padding: 0 20px;\n  }\n`\n","import React from 'react'\n\nimport PostHead from 'components/Post/PostHead'\nimport Template from 'components/Common/Template'\nimport { graphql } from 'gatsby'\nimport { PostFrontmatterType } from 'types/PostItem.types'\nimport PostContent from 'components/Post/PostContent'\nimport CommentWidget from 'components/Post/CommentWidget'\nimport { ThemeContextProvider } from 'hooks/useTheme'\n\ntype PostTemplateProps = {\n  data: {\n    allMarkdownRemark: {\n      edges: PostPageItemType[]\n    }\n  }\n  location: {\n    href: string\n  }\n}\n\nexport type PostPageItemType = {\n  node: {\n    html: string\n    frontmatter: PostFrontmatterType\n  }\n}\n\nconst PostTemplate: React.FC<PostTemplateProps> = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n  location: { href },\n}) => {\n  const {\n    node: {\n      html,\n      frontmatter: {\n        title,\n        date,\n        summary,\n        categories,\n        thumbnail: {\n          childImageSharp: { gatsbyImageData },\n          publicURL,\n        },\n      },\n    },\n  } = edges[0]\n\n  return (\n    <>\n      <ThemeContextProvider>\n        <Template\n          title={title}\n          description={summary}\n          url={href}\n          image={publicURL}\n        >\n          <PostHead\n            title={title}\n            date={date}\n            categories={categories}\n            thumbnail={gatsbyImageData}\n          />\n          <PostContent html={html} />\n          <CommentWidget />\n        </Template>\n      </ThemeContextProvider>\n    </>\n  )\n}\n\nexport default PostTemplate\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2 12c0 5.52 4.48 10 10 10s10-4.48 10-10S17.52 2 12 2 2 6.48 2 12zm10-1h4v2h-4v3l-4-4 4-4v3z\"\n}), 'ArrowCircleLeft');\nexports.default = _default;"],"names":["getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","generateUtilityClasses","map","spacing","direction","wrap","size","_excluded","getOffset","val","parse","parseFloat","String","replace","extractZeroValueBreakpointKeys","breakpoints","values","nonZeroKey","Object","keys","forEach","key","sortedBreakpointKeysByValue","sort","a","b","slice","indexOf","GridRoot","styled","name","overridesResolver","props","styles","ownerState","container","item","zeroMinWidth","spacingStyles","Number","isNaN","breakpoint","value","push","resolveSpacingStyles","breakpointsStyles","root","boxSizing","display","flexWrap","width","margin","minWidth","theme","directionValues","propValue","output","flexDirection","maxWidth","rowSpacing","rowSpacingValues","zeroValueBreakpointKeys","_zeroValueBreakpointK","themeSpacing","marginTop","paddingTop","includes","columnSpacing","columnSpacingValues","_zeroValueBreakpointK2","marginLeft","paddingLeft","reduce","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","Math","round","more","fullWidth","assign","up","useUtilityClasses","classes","spacingClasses","className","resolveSpacingClasses","breakpointsClasses","slots","composeClasses","Grid","inProps","ref","themeProps","useThemeProps","useTheme","extendSxProp","columnsProp","columnSpacingProp","component","rowSpacingProp","other","columnsContext","breakpointsValues","otherFiltered","children","as","_ref","title","date","categories","___EmotionJSX","React","PostHeadInfoWrapper","ArrowCircleLeftIconDisplay","ArrowCircleLeftIcon","onClick","goBackPage","window","history","back","sx","fontSize","color","Title","AllGrid","join","_styled","target","thumbnail","PostHeadWrapper","Header","BackgroundImage","image","alt","PostHeadInfo","GatsbyImage","_extends","style","position","html","useContext","ThemeContext","MarkdownRenderer","dangerouslySetInnerHTML","__html","padding","wordBreak","lineHeight","fontWeight","p","ol","cursor","marginBottom","h1","h2","h3","h4","blockquote","borderLeft","li","hr","textDecoration","background","borderRadius","pre","backgroundColor","tabSize","img","CommentWidget","element","createRef","useEffect","current","firstChild","remove","utterances","document","createElement","attributes","src","repo","label","crossorigin","async","entries","setAttribute","appendChild","UtterancesWrapper","data","allMarkdownRemark","edges","location","href","node","frontmatter","summary","childImageSharp","gatsbyImageData","publicURL","ThemeContextProvider","Template","description","url","PostHead","PostContent","_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}