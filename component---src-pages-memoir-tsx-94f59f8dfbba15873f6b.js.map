{"version":3,"file":"component---src-pages-memoir-tsx-94f59f8dfbba15873f6b.js","mappings":"uQAyDA,UA3CwCA,IAIlC,IAHJC,MACEC,mBAAmB,MAAEC,KAExBH,EACC,MAAMI,GAAWC,EAAAA,EAAAA,eACXC,GAAsDC,EAAAA,EAAAA,OAC1DH,EAASI,QAELC,EACuB,iBAApBH,EAAOI,UAA0BJ,EAAOI,SAE3CJ,EAAOI,SADP,MAGAC,EAAqB,CACzBC,IAAKT,EAAMU,SAGLC,aAAcC,EAAc,kBAAEC,IACpCC,EAAAA,EAAAA,GAAoBd,EAAOe,EAAAA,GAE7B,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACED,EAAAA,EAAAA,KAACE,EAAAA,EAAoB,MACnBF,EAAAA,EAAAA,KAACG,EAAAA,EAAM,OACPH,EAAAA,EAAAA,KAACI,EAAAA,GAAW,OACZJ,EAAAA,EAAAA,KAACK,EAAAA,EAAK,CAACC,UAAU,SACjBN,EAAAA,EAAAA,KAACO,EAAAA,EAAU,CACTf,mBAAoBA,EACpBgB,uBAAwBlB,EACxBmB,SAAU,SACVC,cAAe,CAAC,CAAEC,MAAO,MAAOC,MAAO,WAEzCZ,EAAAA,EAAAA,KAACa,EAAAA,EAAc,CACbvB,iBAAkBA,EAClBwB,MAAOlB,KAGTI,EAAAA,EAAAA,KAACH,EAAiB,CAACkB,KAAM,WAAYxB,SAAUD,KAEhD,C","sources":["webpack://gatsby-starter-default/./src/pages/memoir.tsx"],"sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport { parse } from 'query-string'\nimport Header from 'components/Common/Header'\nimport Title from 'components/CategoryPage/Title'\nimport DetailList from 'components/CategoryPage/DetailList'\nimport { ThemeContextProvider } from 'hooks/useTheme'\nimport { PageDataProps } from 'types/PostItem.types'\nimport { POSTS_PER_PAGE } from '../constants/PageEA'\nimport DetailPostList from 'components/CategoryPage/DetailPostList'\nimport { useLocation } from '@reach/router'\nimport { usePaginationFooter } from 'hooks/usePaginationFooter'\nimport GlobalStyle from 'components/Common/GlobalStyle'\n\nconst memoir: React.FC<PageDataProps> = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const location = useLocation()\n  const parsed: { [key: string]: string | string[] | null } = parse(\n    location.search,\n  )\n  const selectedCategory: string =\n    typeof parsed.category !== 'string' || !parsed.category\n      ? 'All'\n      : parsed.category\n\n  const detailCategoryList = {\n    All: edges.length,\n  }\n\n  const { currentItems: paginatedPosts, PaginationNFooter } =\n    usePaginationFooter(edges, POSTS_PER_PAGE)\n\n  return (\n    <>\n      <ThemeContextProvider>\n        <Header />\n        <GlobalStyle />\n        <Title titleText=\"회고록\" />\n        <DetailList\n          detailCategoryList={detailCategoryList}\n          selectedDetailCategory={selectedCategory}\n          basePath={'memoir'}\n          categoriesMap={[{ value: 'All', label: 'All' }]}\n        />\n        <DetailPostList\n          selectedCategory={selectedCategory}\n          posts={paginatedPosts}\n        />\n\n        <PaginationNFooter path={'/memoir/'} category={selectedCategory} />\n      </ThemeContextProvider>\n    </>\n  )\n}\nexport default memoir\n\nexport const getDetailPostList = graphql`\n  query getDetailPostList {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n      filter: { fileAbsolutePath: { regex: \"/contents/memoir/\" } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["_ref","data","allMarkdownRemark","edges","location","useLocation","parsed","parse","search","selectedCategory","category","detailCategoryList","All","length","currentItems","paginatedPosts","PaginationNFooter","usePaginationFooter","POSTS_PER_PAGE","___EmotionJSX","React","ThemeContextProvider","Header","GlobalStyle","Title","titleText","DetailList","selectedDetailCategory","basePath","categoriesMap","value","label","DetailPostList","posts","path"],"sourceRoot":""}